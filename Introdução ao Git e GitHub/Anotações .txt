GIT - sistema de versionamento de codigo distribuido.

criado em 2005 por Linus torvalds. Desenvolveu o linux

beneficios de aprender GIT e GITHUB

1 - controle de vers√£o
2 - armazenamento em nuvem
3 - trabalho em equipe
4 - melhorar seu c√≥digo
5 - Reconhecimento

COMANDOS B√ÅSICOS PARA UM BOM DESEMPENHO NO TERMINAL

GUI (Interface grafica) x CLI (Linha de comando)

O que vamos aprender?

- Mudar pastas
- Listar as pastas
- Criar pastas/arquivos
- Deletar pastas/ arquivos

COnceitos de forma certa.

Windows  (derivado do shell)

- cd
- dir
- mkdir
- del/ rmdir

Unix (derivado do linux)
- cd
- ls
- mkdir
- rm -rf

os comandos usados possuem vari√¢ncias, possuem flags que s√£o 
complementos que passamos para esses comandos. Eles acrescentam, 
modificam ou formatam a forma como esses comandos s√£o devolvidos 
pra gente.
Vamos aprender de acordo a necessidade.

INSTALANDO GIT

COMO O GIT FUNCIONA

- SHA1 Secure Hash Algorithm / a encripta√ß√£o gera conjunto de caracteres identificador de 40 digitos.
   
- Objetos fundamentais 
- Sistema distribuido
- Seguran√ßa

OBJETOS INTERNOS DO GIT

- Blobs - contem metadados do GIT  (\0  - tamanho etc - guarda o 
   SHA1  ou seja caracteres do arquivo...)
- Trees - armazenam blobs / contem metadados / guarda o nome do arquivo
- Commits - objeto que vai juntar tudo aponta a arvore, parente, autor, mensagem, timestamp etc...
tbm possuem SHA1 encripta√ß√£o hash de 40 


CHAVES SSH E TOKENS

Primeiros comandos com o GIT

-Iniciar o GIT
-Iniciar o Versionamento
-Criar um Commit 

-git init
-git add
-git commit

criando um reposit√≥rio


Adicinando um arquivo 

-MARKDOWN  (forma mais humana de escrever uma html)   
-NAVEGADOR 
-HTML
 
CICLO DE VIDA DOS ARQUIVOS

-Git init (cria-se um repositorio)

                         TRACKED
Untracked   -  Unmodified   -  Modified   -  Staged
 
 
git satus
git push origin master
git pull master


 
resolvendo conflitos
 
 abre ve onde t√° a altera√ß√£o e commita novamente
 
 COMANDOS GIT BASH
 
 https://www.atlassian.com/br/git/tutorials/dotfiles
 
 
 Desafios de Projeto DIO
 
Um dos elementos centrais da nossa metodologia educacional √© o conceito de Project-Based Learning / Problem-Based Learning (PBL). Nesse contexto, nossos Desafios de Projeto (tamb√©m conhecidos como Labs) t√™m como objetivo aplicar o PBL em conjunto com o GitHub, para cria√ß√£o de um portf√≥lio de solu√ß√µes consistente ao longo da nossa jornada educacional.
 
IMPORTANTE: Os Labs entregues na plataforma da DIO ficam dispon√≠veis para as empressas parceiras avali√°-los tecnicamente. Por isso, caprichem no desenvolvimento e documenta√ß√£o de suas solu√ß√µes, pois elas podem ser um grande diferencial ao seu favor em um processo de contrata√ß√£o üòé
 
O Que Voc√™ Precisa Saber Sobre Git e GitHub?
 
I. Para projetos mais simples, voc√™ pode utilizar funcionalidades oferecidas pelo pr√≥prio GitHub, como por exemplo:
 
Criar um novo reposit√≥rio (sempre p√∫blico) atrav√©s do link https://github.com/new (acess√≠vel pelo site atrav√©s do bot√£o "+", depois "Novo reposit√≥rio"). Alternativamente, tamb√©m √© comum utilizar o conceito de "fork" em um projeto base disponibilidado pelo expert (esta funcionalidade encontra-se no canto superior direito da p√°gina do reposit√≥rio no GitHub). Tecnicamente, um "fork" cria uma c√≥pia exata do projeto em seu GitHub, mantendo assim uma refer√™ncia direta ao c√≥digo original, o que √© muito √∫til para projeto com uma base s√≥lida a ser seguida.
Lembre-se de que, a URL criada no item anterior √© a que voc√™ deve entregar ao finalizar o(s) desafio(s) proposto(s) no Lab. Por exemplo: https://github.com/falvojr/lab-banco-digital-oo, onde "falvojr" representa o usu√°rio do GitHub e "lab-banco-digital-oo" √© o nome do reposit√≥rio.
Por fim, o GitHub possui um editor de c√≥digo online, o qual pode ser acessado apenas teclando o simbolo de "ponto final" em seu teclado. Com isso, uma vers√£o Web do VSCode ser√° aberta e voc√™ poder√° editar os arquivos do seu projeto como se tivesse essa IDE instalada em sua m√°quina. Al√©m disso, esta ferramenta conta com todo controle e versionamento de c√≥digo (via Git, obviamente), onde voc√™ pode fazer normalmente os seus commits, pushes etc.
Nesse contexto, segue um conte√∫do exclusivo do DIO Global, que foi disponibilizado gratuitamente para que todos entendam como o GitHub pode ser uma ferramenta poderosa para cria√ß√£o do nosso portf√≥lio de projetos: Criando Seu Curr√≠culo Online Usando Apenas Ferramentas do GitHub.
 
II. Por outro lado, caso voc√™ esteja desbravando Desafios de Projeto mais complexos e robustos, recomendamos que consuma alguns dos nossos conte√∫dos educacionais voltados para o entendimento total desta tecnologia, s√£o eles:
 
Curso: Introdu√ß√£o ao Git e ao GitHub
Curso: Trabalhando com Branches no GitHub (opcional)
Curso: Git e GitHub Focado em PullRequest (opcional)
Lab: Criando seu Primeiro Reposit√≥rio no GitHub Para Compartilhar Seu Progresso

 